name: Sonar Quality Check

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0  # Shallow clones should be disabled for better relevancy of analysis
    
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'
    
    - name: Install frontend dependencies
      run: |
        cd front
        npm install
    
    - name: Run frontend tests with coverage
      run: |
        cd front
        npm run test -- --no-watch --browsers=ChromeHeadless --code-coverage
      continue-on-error: true  # Pour ne pas bloquer l'analyse Sonar si les tests échouent
    
    # Exécuter les tests backend avec Maven et générer le rapport JaCoCo
    - name: Build and test backend with coverage
      run: |
        cd back
        mvn clean verify jacoco:report
    
    # Analyse SonarCloud avec valeurs codées en dur
    - name: Run SonarCloud analysis for backend
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        cd back
        
        # UTILISATION DE VALEURS CODÉES EN DUR POUR LE DÉBOGAGE
        # Remplacez ces valeurs par celles de votre projet SonarCloud
        PROJECT_KEY="Jubaaa44_projet10"
        ORGANIZATION="Jubaaa44"
        
        echo "Using hardcoded project key: $PROJECT_KEY"
        echo "Using hardcoded organization: $ORGANIZATION"
        
        # Exécuter SonarCloud avec les valeurs codées en dur
        mvn sonar:sonar \
          -Dsonar.projectKey=$PROJECT_KEY \
          -Dsonar.organization=$ORGANIZATION \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
          -Dsonar.java.source=11 \
          -Dsonar.java.binaries=target/classes \
          -Dsonar.java.test.binaries=target/test-classes \
          -Dsonar.sourceEncoding=UTF-8 \
          -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml \
          -Dsonar.projectName="Projet10 Backend"
    
    # Analyse frontend avec valeurs codées en dur
    - name: Run SonarCloud analysis for frontend
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        # Télécharger SonarScanner
        wget -q https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.7.0.2747-linux.zip
        unzip -q sonar-scanner-cli-4.7.0.2747-linux.zip
        
        # UTILISATION DE VALEURS CODÉES EN DUR POUR LE DÉBOGAGE
        # Remplacez ces valeurs par celles de votre projet SonarCloud
        PROJECT_KEY="jubaaa44_projet10_frontend"
        ORGANIZATION="jubaaa44"
        
        echo "Using hardcoded project key: $PROJECT_KEY"
        echo "Using hardcoded organization: $ORGANIZATION"
        
        # Exécuter l'analyse frontend
        cd front
        ../sonar-scanner-4.7.0.2747-linux/bin/sonar-scanner \
          -Dsonar.projectKey=$PROJECT_KEY \
          -Dsonar.organization=$ORGANIZATION \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
          -Dsonar.sources=src \
          -Dsonar.tests=src \
          -Dsonar.test.inclusions=**/*.spec.ts \
          -Dsonar.sourceEncoding=UTF-8 \
          -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info \
          -Dsonar.typescript.lcov.reportPaths=coverage/lcov.info \
          -Dsonar.projectName="Projet10 Frontend"