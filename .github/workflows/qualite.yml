name: Code Quality Workflow

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ develop ]
  workflow_dispatch:

jobs:
  java-quality:
    name: Java Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    
    # Analyse JaCoCo pour la couverture de code
    - name: Run tests with JaCoCo
      run: |
        cd back
        mvn clean install
      
    # Installation de PMD (si non inclus dans le build Maven)
    - name: Install PMD
      run: |
        wget https://github.com/pmd/pmd/releases/download/pmd_releases%2F6.55.0/pmd-bin-6.55.0.zip
        unzip pmd-bin-6.55.0.zip
    
    # Exécution de PMD
    - name: Run PMD
      run: |
        ./pmd-bin-6.55.0/bin/run.sh pmd -d back/src -R rulesets/java/quickstart.xml -f text
      continue-on-error: true
    
    # Installation et exécution de SpotBugs
    - name: Run SpotBugs
      run: |
        cd back
        mvn com.github.spotbugs:spotbugs-maven-plugin:4.7.3.0:spotbugs -Dspotbugs.effort=Max -Dspotbugs.threshold=Low
      continue-on-error: true
    
    # Supprimé l'archivage des rapports pour éviter les problèmes

  typescript-quality:
    name: TypeScript Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'
        cache: 'npm'
        cache-dependency-path: './front/package-lock.json'
    
    - name: Install dependencies
      run: |
        cd front
        npm install
    
    # Installer ESLint si nécessaire
    - name: Install ESLint
      run: |
        cd front
        npm install --save-dev eslint eslint-plugin-angular @typescript-eslint/eslint-plugin @typescript-eslint/parser
      continue-on-error: true
    
    # Exécuter ESLint
    - name: Run ESLint
      run: |
        cd front
        npx eslint . --ext .ts
      continue-on-error: true
    
    # Exécuter les tests avec couverture
    - name: Run tests with coverage
      run: |
        cd front
        npm run test -- --no-watch --code-coverage --browsers=ChromeHeadless
      continue-on-error: true
    
    # Audit de sécurité npm
    - name: Run npm audit
      run: |
        cd front
        npm audit
      continue-on-error: true
    
    # Supprimé l'archivage des rapports pour éviter les problèmes

  # Simplifié pour éviter les problèmes d'actions
  quality-summary:
    name: Quality Summary
    needs: [java-quality, typescript-quality]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Generate simple quality summary
      run: |
        echo "Quality checks completed. Check job logs for details."